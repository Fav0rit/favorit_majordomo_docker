version: "3"
services:
  webserver:
    build: 
      context: ./docker/${PHPVERSION}
    container_name: '${COMPOSE_PROJECT_NAME}-webserver'
    restart: 'always'
    network_mode: "host"
    #ports:
    #  - "${HOST_MACHINE_UNSECURE_HOST_PORT}:80"
    #  - "${HOST_MACHINE_SECURE_HOST_PORT}:443"
    #  - "8001:8001"
    depends_on:
      - database
    volumes: 
      - ${DOCUMENT_ROOT-.app/www}:/var/www
      - ${PHP_INI-./config/php/php.ini}:/usr/local/etc/php/php.ini
      - ${VHOSTS_DIR-./config/vhosts}:/etc/apache2/sites-enabled
      - ${LOG_DIR-./logs/apache2}:/var/log/apache2
      - "./config/supervisor.conf:/etc/supervisor.conf"
    environment:
      APACHE_DOCUMENT_ROOT: ${APACHE_DOCUMENT_ROOT-/var/www/html}
      PMA_PORT: ${HOST_MACHINE_PMA_PORT}
      MYSQL_USER : ${MYSQL_USER}
      MYSQL_PASSWORD: ${MYSQL_PASSWORD}
      MYSQL_HOST : ${MYSQL_HOST}
  database:
    build:
      context: "./docker/${DATABASE}"
    container_name: '${COMPOSE_PROJECT_NAME}-database'
    restart: 'always'
    ports:
      - "127.0.0.1:${HOST_MACHINE_MYSQL_PORT}:3306"
    volumes: 
      - ${MYSQL_DATA_DIR-./data/mysql}:/var/lib/mysql
      - ${MYSQL_LOG_DIR-./logs/mysql}:/var/log/mysql
      - ${MYSQL_CONF_DIR-./config/mysql}:/etc/mysql
    environment:
      MYSQL_ROOT_PASSWORD: ${MYSQL_ROOT_PASSWORD}
      MYSQL_DATABASE: ${MYSQL_DATABASE}
      MYSQL_USER: ${MYSQL_USER}
      MYSQL_PASSWORD: ${MYSQL_PASSWORD}
      TZ: ${TIMEZONE}
  phpmyadmin:
    image: ${PMA}
    container_name: '${COMPOSE_PROJECT_NAME}-phpmyadmin'
    depends_on:
      - database
      - webserver
    restart: always
    environment:
      PMA_HOST: database
      PMA_PORT: 3306
      PMA_USER: root
      PMA_PASSWORD: ${MYSQL_ROOT_PASSWORD}
      MYSQL_ROOT_PASSWORD: ${MYSQL_ROOT_PASSWORD}
      MYSQL_USER: ${MYSQL_USER}
      MYSQL_PASSWORD: ${MYSQL_PASSWORD}
      UPLOAD_LIMIT: 50M
    ports:
      - '${HOST_MACHINE_PMA_PORT-8080}:80'
    volumes: 
      #- /sessions
      - ${PHP_INI-./config/php/php.ini}:/usr/local/etc/php/conf.d/php-phpmyadmin.ini
      
  # Additional services
  certbot:
    image: ghcr.io/linuxserver/swag
    container_name: '${COMPOSE_PROJECT_NAME}-certbot'
    cap_add:
      - NET_ADMIN
    environment:
      - PUID=1000
      - PGID=1000
      - TZ=Europe/Moscow
      - URL=${HOST_DOMAIN}
      - SUBDOMAINS=${SUB_DOMAINS}
      - VALIDATION=http
      #- ONLY_SUBDOMAINS=false #optional
      #- EXTRA_DOMAINS= #optional
    volumes:
      - ./config/certbot:/config
      - ./app/www/cert:/le-ssl
    ports:
      - ${HOST_MACHINE_SECURE_HOST_PORT-443}:443
      #- ${HOST_MACHINE_UNSECURE_HOST_PORT-80}:80 #optional
    restart: unless-stopped
  mosquitto:
    image: eclipse-mosquitto:latest
    container_name: '${COMPOSE_PROJECT_NAME}-mosquitto'
    volumes:
      - ./config/mosquitto:/mosquitto/config
    network_mode: "host"
    restart: always
  zigbee2mqtt:
    container_name: '${COMPOSE_PROJECT_NAME}-zigbee2mqtt'
    image: koenkk/zigbee2mqtt
    volumes:
      - ./app/zigbee2mqtt/data:/app/data
      - ./app/zigbee2mqtt/run/udev:/run/udev:ro
    restart: always
    network_mode: host
    privileged: true
    environment:
      - TZ=Europe/Moscow